// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */
"use client";

// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei'
// import { useFrame } from "@react-three/fiber";

// export function Person(props) {
//   const { nodes, materials } = useGLTF('/models/TEST_1.glb')
//     const modelRef = useRef();

//   useFrame((state) => {
//     modelRef.current.position.y = -1.5 + Math.sin(state.clock.elapsedTime)*0.15
//   });
//   return (
//     <group
//           {...props}
//       dispose={null}
//       ref={modelRef}
//       position={[0, -1.5, -20]}
//       scale={[2, 2, 0.3]}
//       rotation={[0.25, 0, 0]}
//     >
//       <mesh castShadow receiveShadow geometry={nodes.Lo.geometry} material={nodes.Lo.material} />
//     </group>
//   )
// }

// useGLTF.preload('/models//TEST_1.glb')

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from "@react-three/fiber";

export  default function Person(props) {
  const { nodes, materials } = useGLTF('/models/TEST_1.glb')
  const modelRef = useRef();

  useFrame((state) => {
        modelRef.current.position.y = -1.5 + Math.sin(state.clock.elapsedTime)*0.15
      });
  return (
    <group {...props} dispose={null} ref={modelRef} scale={[2, 2, 0.3]}  position={[0, -1.5, -20]} rotation={[0.25, 0, 0]}>
      <group position={[-0.035, 0.671, 0.366]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011.geometry}
          material={materials.tongue}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_1.geometry}
          material={materials.teeth}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_2.geometry}
          material={materials['skin.012']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_3.geometry}
          material={materials['hair.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_4.geometry}
          material={materials['hair1.012']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_5.geometry}
          material={materials.Material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_6.geometry}
          material={materials['Material.007']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_7.geometry}
          material={materials['Material.002']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_8.geometry}
          material={materials['Tiny Iris 1.1.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011_9.geometry}
          material={materials['Tiny Sclera 1.1.003']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/TEST_1.glb')
